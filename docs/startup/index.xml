<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>起動設定 on minoru&#39;s Emacs Config</title>
    <link>https://minorugh.github.io/emacs.d/startup/</link>
    <description>Recent content in 起動設定 on minoru&#39;s Emacs Config</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 29 Aug 2022 05:45:20 +0900</lastBuildDate><atom:link href="https://minorugh.github.io/emacs.d/startup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1.1. eary-init.el</title>
      <link>https://minorugh.github.io/emacs.d/startup/eary-init/</link>
      <pubDate>Mon, 29 Aug 2022 05:45:20 +0900</pubDate>
      
      <guid>https://minorugh.github.io/emacs.d/startup/eary-init/</guid>
      <description>早期初期化ファイル 🔗 minorugh/.emacs.d/early-init.el
Emacs27から導入された eary-init.elは、init.el でGUIやパッケージシステムの初期化が実行される前にロードされるので、UI関係や package-enable-at-startup のようなパッケージ初期化プロセスに影響を与える変数を先に書くことで起動を早くすることが出来るようです。
GCを減らす GC の閾値を最大にしておくことで GC を実質止めることができます。とりあえず書いておけば速くなる系なのでおすすめです。
;; Defer garbage collection further back in the startup process (setq gc-cons-threshold most-positive-fixnum) eary-init.el の先頭に書きます。
パッケージの初期化を抑制する Emacs27では、package-initialize が 2回実行されます。 1回は、初期化ファイルの評価中に、もう 1回は、初期化ファイルの読み取りを終了した後にです。
eary-init.el に以下を書いて、1回目の実行を抑制することで少し早くなります。
;; For slightly faster startup (setq package-enable-at-startup nil) 常に最新のバイトコードをロードする ;; Always load newest byte code (setq load-prefer-newer t) フレームのサイズ変更を禁止する ;; Inhibit resizing frame (setq frame-inhibit-implied-resize t) 起動時画面最大化を設定 メニューバー、ツールバー、スクロールなどは、ここで無効にする方が速くなります。 (初期化される前)
ここで最大化を宣言しておくことで toggle-frame-fullscreen コマンドによる「最大化&amp;lt;-&amp;gt;フルスクリーン」のトグル表示を可能にします。
;; Faster to disable these here (before they&amp;#39;ve been initialized) (push &amp;#39;(menu-bar-lines .</description>
    </item>
    
    <item>
      <title>1.2. speed up startup</title>
      <link>https://minorugh.github.io/emacs.d/startup/speed-up/</link>
      <pubDate>Mon, 29 Aug 2022 05:45:20 +0900</pubDate>
      
      <guid>https://minorugh.github.io/emacs.d/startup/speed-up/</guid>
      <description>起動時間の短縮 マジックファイル名を一時的に無効にすることで、起動時間を短縮できます。
GC設定とともに設定ファイル読み込み後に正常値に戻します。 eary-init.el に書くよりも init.el の先頭に書くほうが効果がある感じです。
;; Speed up startup (unless (or (daemonp) noninteractive init-file-debug) (let ((old-file-name-handler-alist file-name-handler-alist)) (setq file-name-handler-alist nil) (add-hook &amp;#39;emacs-startup-hook (lambda () &amp;#34;Recover file name handlers.&amp;#34; (setq file-name-handler-alist (delete-dups (append file-name-handler-alist old-file-name-handler-alist))))))) ;; Defer garbage collection further back in the startup process (setq gc-cons-threshold most-positive-fixnum) (add-hook &amp;#39;emacs-startup-hook (lambda () &amp;#34;Recover GC values after startup.&amp;#34; (setq gc-cons-threshold 800000))) </description>
    </item>
    
    <item>
      <title>1.3. leaf.el</title>
      <link>https://minorugh.github.io/emacs.d/startup/leaf/</link>
      <pubDate>Mon, 29 Aug 2022 05:45:20 +0900</pubDate>
      
      <guid>https://minorugh.github.io/emacs.d/startup/leaf/</guid>
      <description>設定ファイルを明示的に書く 🔗 Emacs入門から始めるleaf.el入門
@conao3 さんの上記記事に触発されて、use-pacage.elから leaf.el に全面的に書き直しました。
leaf.el の初期設定 @conao3 さんの示されていたものを下敷きにして init.el を設定しています。
;;; init.el --- Emacs first Configuration. -*- lexical-binding: t -*- ;;; Commentary: ;; ;; Compatible with Emacs 27 and later ;; Aiming for a fancy and fast Emacs configuration ;; ;;; Code: ;; (setq debug-on-error t) ;; Speed up startup (unless (or (daemonp) noninteractive init-file-debug) (let ((old-file-name-handler-alist file-name-handler-alist)) (setq file-name-handler-alist nil) (add-hook &amp;#39;emacs-startup-hook (lambda () &amp;#34;Recover file name handlers.</description>
    </item>
    
    <item>
      <title>1.4. init-loader.el</title>
      <link>https://minorugh.github.io/emacs.d/startup/init-loader/</link>
      <pubDate>Mon, 29 Aug 2022 05:45:20 +0900</pubDate>
      
      <guid>https://minorugh.github.io/emacs.d/startup/init-loader/</guid>
      <description>[init-loader.el] 設定ファイルのローダー 🔗 emacs-jp/init-loader: Loader of configuration files.
起動時間が犠牲になるということで敬遠される向きもあるが微々たるもので、恩恵のほうが遥かに大きい。
init-loader には、エラーが出た設定ファイルは読み込まれない&amp;hellip;という特徴があり原因究明がしやすくなるというメリットがある。またログの出力機能を備えていることもメリットとして挙げられる。
(leaf init-loader :ensure t :init (load-file &amp;#34;~/.emacs.d/template/my:dired.el&amp;#34;) (load-file &amp;#34;~/.emacs.d/template/my:template.el&amp;#34;) :config (custom-set-variables &amp;#39;(init-loader-show-log-after-init &amp;#39;error-only)) (init-loader-load)) デフォルトで ~/.emacs.d/inits デレクトリ以下のファイルを読み込みます。
ユーザー設定ファイルのロード ごく個人的なtemplateファイル群を ~/.emacs.d/template フォルダーに置くようにしているので init-loader を起動する前にこれらを読み込むようにしている。</description>
    </item>
    
    <item>
      <title>1.5. init-mini.el</title>
      <link>https://minorugh.github.io/emacs.d/startup/init-mini/</link>
      <pubDate>Mon, 29 Aug 2022 05:45:20 +0900</pubDate>
      
      <guid>https://minorugh.github.io/emacs.d/startup/init-mini/</guid>
      <description>[init-mini.el] 最小限の emacs を起動させるための設定 init-mini.el は、 新しいパッケージを試したり設定をテストしたり、エラー等で Emacsが起動しない場合などに使用します。
以下を .zshrc または .bashrc に記述し反映させたのち、シェルから eq と入力することで起動することがでます。
alias eq = &amp;#39;emacs -q -l ~/.emacs.d/init-mini.el&amp;#39; ファイルの PATH は、ご自分の環境に応じて修正が必要です。</description>
    </item>
    
    <item>
      <title>1.6. dashboard</title>
      <link>https://minorugh.github.io/emacs.d/startup/dashboard/</link>
      <pubDate>Mon, 29 Aug 2022 05:45:20 +0900</pubDate>
      
      <guid>https://minorugh.github.io/emacs.d/startup/dashboard/</guid>
      <description>[dashboard.el]初期画面をイケメンにする 🔗 emacs-dashboard: An extensible emacs startup screen
Emacsの起動を早くしようと試行錯誤している一方、せめて初期画面くらいは、ホットするようなものにしたい…ということで、dashbord.el を導入しました。
&amp;lt;home&amp;gt; キーを押すことで何処からでも dashboard画面に戻ります。
(leaf dashboard :ensure t :hook ((after-init-hook . dashboard-setup-startup-hook) (dashboard-mode-hook . page-break-lines-mode)) :defun (dashboard-setup-startup-hook) :bind ((&amp;#34;&amp;lt;home&amp;gt;&amp;#34; . open-dashboard) (:dashboard-mode-map (&amp;#34;c&amp;#34; . chromium-calendar) (&amp;#34;y&amp;#34; . chromium-yahoo-japan) (&amp;#34;n&amp;#34; . chromium-nhk-news) (&amp;#34;w&amp;#34; . chromium-weather) (&amp;#34;t&amp;#34; . chromium-tweetdeck) (&amp;#34;h&amp;#34; . chromium-homepage) (&amp;#34;m&amp;#34; . sylpheed) (&amp;#34;s&amp;#34; . slack) (&amp;#34;.&amp;#34; . hydra-browse/body) (&amp;#34;&amp;lt;home&amp;gt;&amp;#34; . quit-dashboard))) :advice (:override emacs-init-time ad:emacs-init-time) :init (leaf page-break-lines :ensure t) :config ;; Set the title (setq dashboard-banner-logo-title (concat &amp;#34;GNU Emacs &amp;#34; emacs-version &amp;#34; kernel &amp;#34; (car (split-string (shell-command-to-string &amp;#34;uname -r&amp;#34;))) &amp;#34; Debian &amp;#34; (car (split-string (shell-command-to-string &amp;#34;cat /etc/debian_version&amp;#34;))) &amp;#34; 86_64 GNU/Linux&amp;#34;)) ;; Set the banner (setq dashboard-startup-banner (expand-file-name &amp;#34;emacs.</description>
    </item>
    
  </channel>
</rss>
